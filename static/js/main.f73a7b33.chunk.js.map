{"version":3,"sources":["data/recipes sync /^/yummly_.*$","yummly_logo.png","assets/chicken.jpg","assets/beef.jpg","assets/pork.jpg","assets/pasta.jpg","assets/potatoes.jpg","assets/rice.jpg","assets/bread.jpg","assets/spicy.jpg","assets/mild.jpg","components/Stages.js","logic/ingrediant_cleaning.js","logic/algorithm.js","components/UserInputStage.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MeatStage","className","src","require","alt","onClick","props","choose","React","Component","CarbStage","PiquantStage","posTagger","clean_pepper","name","category","includes","exec","reduce_categories","clean_dairy","clean_starches","clean_nuts","clean_oils","clean_nlp","tagger","verb_pos","tagSentence","filter","word","pos","value","join","clean_tokens","tokens","token","RegExp","clean_redundant","replace","cleanIngredient","remove_category","filters","cleaned_name","Sababa","meat","carb","piquant","startWaitCB","stopWaitCB","this","data","orderedRecipes","orderRecipes","vectorDict","count","loved_recipes","hated_recipes","ingredient_occurence","key","load","localStorage","getItem","JSON","parse","x","setItem","stringify","sort","y","ing","min","max","recipe","ingredient","cat","filt","save","v","Math","ceil","length","rec","determineWeight","rating","push","k","ingList","toDelete","a","b","bestIng","splice","floor","worstIng","recipeIter","positiveScore","undefined","new_data","best","worst","score","indexOf","override","css","UserInputStage","protein","recipes","random","sababa","startWaiting","stopWaiting","state","isWaiting","stop","currentRecipe","buildVector","incrementWeightTop","size","color","setState","setTimeout","ingredients","res","txt","incrementWeightUser","drawWaiting","url","img","image_url","yummly_image","compileIngredients","href","target","rel","vote","MainPage","stage","clear","removeItem","alert","stageDiv","chooseMeat","chooseCarb","choosePiquant","window","confirm","removeSettings","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f73a7b33.chunk.js","sourcesContent":["var map = {\n\t\"./yummly_beef_bread_mild\": 18,\n\t\"./yummly_beef_bread_mild.json\": 18,\n\t\"./yummly_beef_bread_spicy\": 19,\n\t\"./yummly_beef_bread_spicy.json\": 19,\n\t\"./yummly_beef_pasta_mild\": 20,\n\t\"./yummly_beef_pasta_mild.json\": 20,\n\t\"./yummly_beef_pasta_spicy\": 21,\n\t\"./yummly_beef_pasta_spicy.json\": 21,\n\t\"./yummly_beef_potatoes_mild\": 22,\n\t\"./yummly_beef_potatoes_mild.json\": 22,\n\t\"./yummly_beef_potatoes_spicy\": 23,\n\t\"./yummly_beef_potatoes_spicy.json\": 23,\n\t\"./yummly_beef_rice_mild\": 24,\n\t\"./yummly_beef_rice_mild.json\": 24,\n\t\"./yummly_beef_rice_spicy\": 25,\n\t\"./yummly_beef_rice_spicy.json\": 25,\n\t\"./yummly_chicken_bread_mild\": 26,\n\t\"./yummly_chicken_bread_mild.json\": 26,\n\t\"./yummly_chicken_bread_spicy\": 27,\n\t\"./yummly_chicken_bread_spicy.json\": 27,\n\t\"./yummly_chicken_pasta_mild\": 28,\n\t\"./yummly_chicken_pasta_mild.json\": 28,\n\t\"./yummly_chicken_pasta_spicy\": 29,\n\t\"./yummly_chicken_pasta_spicy.json\": 29,\n\t\"./yummly_chicken_potatoes_mild\": 30,\n\t\"./yummly_chicken_potatoes_mild.json\": 30,\n\t\"./yummly_chicken_potatoes_spicy\": 31,\n\t\"./yummly_chicken_potatoes_spicy.json\": 31,\n\t\"./yummly_chicken_rice_mild\": 32,\n\t\"./yummly_chicken_rice_mild.json\": 32,\n\t\"./yummly_chicken_rice_spicy\": 33,\n\t\"./yummly_chicken_rice_spicy.json\": 33,\n\t\"./yummly_pork_bread_mild\": 34,\n\t\"./yummly_pork_bread_mild.json\": 34,\n\t\"./yummly_pork_bread_spicy\": 35,\n\t\"./yummly_pork_bread_spicy.json\": 35,\n\t\"./yummly_pork_pasta_mild\": 36,\n\t\"./yummly_pork_pasta_mild.json\": 36,\n\t\"./yummly_pork_pasta_spicy\": 37,\n\t\"./yummly_pork_pasta_spicy.json\": 37,\n\t\"./yummly_pork_potatoes_mild\": 38,\n\t\"./yummly_pork_potatoes_mild.json\": 38,\n\t\"./yummly_pork_potatoes_spicy\": 39,\n\t\"./yummly_pork_potatoes_spicy.json\": 39,\n\t\"./yummly_pork_rice_mild\": 40,\n\t\"./yummly_pork_rice_mild.json\": 40,\n\t\"./yummly_pork_rice_spicy\": 41,\n\t\"./yummly_pork_rice_spicy.json\": 41\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/yummly_logo.eb1028dc.png\";","module.exports = __webpack_public_path__ + \"static/media/chicken.f93c66e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beef.f4d9c732.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pork.09c6804a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pasta.6f9b4f4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/potatoes.658b52cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rice.4efd27f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bread.af1ccbcf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spicy.c3ddbeb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mild.a5bf6622.jpg\";","import React from \"react\";\r\nimport '../css/designs.css'\r\n\r\nexport class MeatStage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"meat\">\r\n                <h1>Choose Your Meat</h1>\r\n                <div className=\"meatGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/chicken.jpg')}\r\n                            alt='Chicken'\r\n                            onClick={() => this.props.choose('chicken')}\r\n                        />\r\n                        <p>chicken</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"meatGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/beef.jpg')}\r\n                            alt='Beef'\r\n                            onClick={() => this.props.choose('beef')}\r\n                        />\r\n                        <p>beef</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"meatGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/pork.jpg')}\r\n                            alt='Port'\r\n                            onClick={() => this.props.choose('pork')}\r\n                        />\r\n                        <p>pork</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CarbStage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"carb\">\r\n                <h1>Choose Your Carbs</h1>\r\n                <div className=\"carbGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/pasta.jpg')}\r\n                            alt='Pasta'\r\n                            onClick={() => this.props.choose('pasta')}\r\n                        />\r\n                        <p>pasta</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"carbGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/potatoes.jpg')}\r\n                            alt='Potatoes'\r\n                            onClick={() => this.props.choose('potatoes')}\r\n                        />\r\n                        <p>potato</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"carbGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/rice.jpg')}\r\n                            alt='Rice'\r\n                            onClick={() => this.props.choose('rice')}\r\n                        />\r\n                        <p>rice</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"carbGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/bread.jpg')}\r\n                            alt='Bread'\r\n                            onClick={() => this.props.choose('bread')}\r\n                        />\r\n                        <p>bread</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class PiquantStage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"spice\">\r\n                <h1>Choose Your Spiciness Level</h1>\r\n                <div className=\"spiceGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/spicy.jpg')}\r\n                            alt='Spicy'\r\n                            onClick={() => this.props.choose('spicy')}\r\n                        />\r\n                        <p>hot</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"spiceGrid\">\r\n                    <div className=\"gridItem\">\r\n\r\n                        <img\r\n                            src={require('../assets/mild.jpg')}\r\n                            alt='Mild'\r\n                            onClick={() => this.props.choose('mild')}\r\n                        />\r\n                        <p>mild</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","let posTagger = require('wink-pos-tagger');\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction clean_pepper(name, category) {\r\n    if (!name.includes(\"pepper\") && !name.includes(\"jala\") && !name.includes(\"chili\") && !name.includes(\"chill\")) {\r\n        return name;\r\n    } else {\r\n        if (category === \"Baking & Cooking\") {\r\n            if (name.includes(\"cayenn\")) {\r\n                return \"cayenne\"\r\n            } else if (name.includes(\"black\") || name.includes(\"white\")) {\r\n                return \"black pepper\"\r\n            } else {\r\n                return \"chili powder\"\r\n            }\r\n        } else if (category === \"Produce\") {\r\n            if (name.includes(\"bell\") || name.includes(\"sweet\") || /peppers?/.exec(name) !== null) {\r\n                return \"sweet pepper\"\r\n            } else {\r\n                return \"hot pepper\"\r\n            }\r\n        } else if (category === \"Condiments\") {\r\n            if (name.includes('peppercorn')) {\r\n                return 'black pepper'\r\n            } else if (name.includes('pepper sauc') || name.includes('pepper paste')) {\r\n                return 'hot sauce'\r\n            } else if (name.includes('pepper')) {\r\n                return 'hot pepper'\r\n            }\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction reduce_categories(name, category) {\r\n    if (category === 'Alcohol') {\r\n        return 'alcohol'\r\n    } else if (category === 'Seafood' && !name.includes('anchov')) {\r\n        return 'seafoog'\r\n    } else if (category === 'Coffee & Tea') {\r\n        return 'coffee-tea'\r\n    } else if (category === 'Frozen Desserts') {\r\n        return 'frozen desserts'\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction clean_dairy(name, category) {\r\n    if (category !== 'Dairy') {\r\n        return name;\r\n    }\r\n\r\n    if (name.includes('jack')) {\r\n        return 'cheese'\r\n    }\r\n    if (name.includes('butter')) {\r\n        if (name.includes('milk')) {\r\n            return 'buttermilk'\r\n        } else if (name.includes('cup')) {\r\n            return 'buttercup'\r\n        } else if (name.includes('apple')) {\r\n            return 'apple butter'\r\n        } else if (name.includes('peanut') || name.includes('almond') || name.includes('cashew')) {\r\n            return 'nut butter'\r\n        } else {\r\n            return 'butter'\r\n        }\r\n    } else if (name.includes('milk')) {\r\n        if (name.includes('coconut')) {\r\n            return 'coconut milk';\r\n        } else if (name.includes('nut') || name.includes('cashew') || name.includes('almond')) {\r\n            return 'nut milk';\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction clean_starches(name, category) {\r\n    if (name.includes('starch')) {\r\n        return 'starch'\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction clean_nuts(name, category) {\r\n    if (category === 'Dairy') {\r\n        return name;\r\n    }\r\n    if (name.includes('coconut')) {\r\n        return 'coconut';\r\n    } else if (name.includes('pecan') || name.includes('cashew') ||\r\n        name.includes('almond') || name.includes('pistachio') ||\r\n        name.includes('nut')) {\r\n        return 'nut';\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction clean_oils(name, category) {\r\n    if (name.includes('spray') && !name.includes('olive')) {\r\n        return 'cooking oil'\r\n    } else if (name.includes('oil)')) {\r\n        if (name.includes('olive')) {\r\n            return 'olive oil';\r\n        } else if (name.includes('canola') || name.includes('sesame') || name.includes('cooking')) {\r\n            return 'cooking oil';\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction clean_nlp(name, category) {\r\n    let tagger = posTagger();\r\n    let verb_pos = ['VB', 'VBD', 'VBG', 'VBN', 'VBD', 'VBZ'];\r\n    let pos = tagger.tagSentence(name);\r\n    let cleaned_pos = pos.filter(word => !verb_pos.includes(word.pos));\r\n    let cleaned_word = cleaned_pos.map(word => word.value);\r\n    return cleaned_word.join(' ');\r\n}\r\n\r\nfunction clean_tokens(name, category) {\r\n    let tokens = {\r\n        'garlic': (category === 'Baking & Cooking') ? 'garlic powder' : 'garlic',\r\n        'onion': (category === 'Baking & Cooking') ? 'onion powder' : 'onion',\r\n        'shallot': 'shallot',\r\n        'salt': 'salt',\r\n        'stock': 'stock',\r\n        'broth': 'stock',\r\n        'gravy': 'stock',\r\n        'bouillon': 'stock',\r\n        'soup': 'stock',\r\n        'cheese': 'cheese',\r\n        'mozzarella': 'cheese',\r\n        'cheddar': 'cheese',\r\n        'ricotta': 'cheese',\r\n        'milk': 'milk',\r\n        'heavy cream': 'heavy cream',\r\n        'whipping cream': 'heavy cream',\r\n        'sour cream': 'sour cream',\r\n\r\n        'parme': 'cheese',\r\n        'mushroom': 'mushroom',\r\n        'shiitake': 'mushroom',\r\n        'cabbage': 'cabbage',\r\n        'lettuce': 'lettuce',\r\n        'tomato': 'tomato',\r\n        'marinara': 'tomato',\r\n        'vinegar': 'vinegar',\r\n        'bean': 'beans',\r\n        'soy': 'soy',\r\n        'egg': 'eggs',\r\n        'crumb': 'crumbs',\r\n        'apple': 'apple',\r\n        'basil': 'basil',\r\n        'anchov': 'anchovy',\r\n        'syrup': 'syrup',\r\n        'oat': 'oats',\r\n        'waffl': 'waffle',\r\n        'cereal': 'cereal',\r\n        'molass': 'syrup',\r\n        'guacamole': 'avocado',\r\n        'avocado': 'avocado',\r\n        'hot sauce': 'hot sauce',\r\n        'tabasco': 'hot sauce',\r\n        'mayo': 'mayonnaise',\r\n        'mustard': 'mustard',\r\n        'pickle': 'pickles',\r\n        'jam': 'jam',\r\n        'dressing': 'dressing',\r\n        'worchestire': 'worchestire sauce',\r\n        'worcestershire': 'worchestire sauce',\r\n        'sour sauce': 'sweet and sour sauce',\r\n        'margarin': 'margarin',\r\n\r\n        'radish': category === 'Condiments' ? 'horse radish' : name,\r\n        'relish': 'relish',\r\n        'olive': 'olives',\r\n        'teriyaki': 'teriyaki',\r\n        'barbeque': 'bbq',\r\n        'bbq': 'bbq',\r\n        'yogurt': 'yogurt',\r\n        'peppercorn': 'black pepper',\r\n        'curry': 'curry',\r\n        'corn\\\\s?flakes?': 'cereal',\r\n        'hash': '',\r\n        'corn': 'corns',\r\n        'vegetable': 'vegetables',\r\n        'cole\\\\s?slaw': 'cole slaw',\r\n        'ranch': 'ranch',\r\n        'hummus': 'hummus',\r\n        'garbanzo': 'hummus',\r\n        'chick\\\\s?pea': 'hummus',\r\n        'pineappl': 'pineapple',\r\n        'brocc': 'broccoli',\r\n        'cauli': 'cauliflower',\r\n        'potato': '',\r\n        'rice': '',\r\n    };\r\n\r\n    for (let token in tokens) {\r\n        let r = RegExp(token);\r\n        if (r.exec(name) != null) {\r\n            return tokens[token];\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction clean_redundant(name, category) {\r\n    let redundant = [\r\n\t\t'ground',\r\n\t\t'fresh',\r\n\t\t'crushed',\r\n\t\t'powder',\r\n\t\t'granulated',\r\n\t\t'hungarian',\r\n\t\t'dried',\r\n\t\t'leaves',\r\n\t\t'extra',\r\n\t\t'virgin',\r\n\t\t'roasted',\r\n\t\t'pure',\r\n\t\t'extra virgin',\r\n\t\t'flakes',\r\n\t\t'seeds',\r\n\t\t'fine',\r\n\t\t'neutral',\r\n\t\t'smoked',\r\n\t\t'kosher',\r\n\t\t'cracked',\r\n\t\t'dehydrated',\r\n\t\t'red',\r\n\t\t'hot',\r\n\t\t'dry',\r\n\t\t'dark',\r\n\t\t'brown',\r\n\t\t'crushed',\r\n\t\t'Diamond',\r\n\t\t'Crystal',\r\n\t\t'light',\r\n\t\t'brown',\r\n\t\t'sorghum',\r\n\t\t'white',\r\n\t\t'coarse',\r\n\t\t'toasted',\r\n\t\t'blanched',\r\n\t\t'threads',\r\n\t\t'freshly',\r\n\t\t'all purpose',\r\n\t\t'warm',\r\n\t\t'hot',\r\n\t\t'filtered',\r\n\t\t'juice',\r\n\t\t'orange',\r\n\t\t'sprouts',\r\n\t\t'head',\r\n\t\t'minced',\r\n\t\t'hearts',\r\n\t\t'roma',\r\n\t\t'chopped',\r\n\t\t'spring',\r\n\t\t'wedge',\r\n\t\t'small',\r\n\t\t'sweet',\r\n\t\t'green',\r\n\t\t'floret',\r\n\t\t'baby',\r\n\t\t'baking',\r\n\t\t'medium',\r\n\t\t'leaves',\r\n\t\t'leaf',\r\n\t\t'garnish',\r\n\t\t'chips',\r\n\r\n\t\t'slices',\r\n\t\t'whole',\r\n\t\t'ripe',\r\n\t];\r\n    for (let word in redundant) {\r\n        if (name.includes(word)) {\r\n            name = name.replace(word, '');\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction remove_category(category) {\r\n    let to_remove = [\r\n        'Meat',\r\n        'Bakery',\r\n        'Floral',\r\n        'Packaged Meals & Side Dishes',\r\n        'Soy Products',\r\n        'Pharmacy & First-Aid',\r\n        'Other',\r\n        'null',\r\n    ];\r\n    return to_remove.includes(category)\r\n}\r\n\r\n\r\nfunction cleanIngredient(name, category) {\r\n    if (remove_category(category)) {\r\n        return null;\r\n    }\r\n\r\n    let filters = [\r\n\t\tclean_pepper,\r\n\t\tclean_starches,\r\n\t\tclean_dairy,\r\n\t\tclean_oils,\r\n\t\treduce_categories,\r\n\t\tclean_tokens,\r\n\t\tclean_nuts,\r\n        clean_redundant,\r\n\t\tclean_nlp,\r\n    ];\r\n    for (let filter in filters) {\r\n        let cleaned_name = filters[filter](name, category);\r\n        if (cleaned_name !== name) {\r\n            return cleaned_name === '' ? null : cleaned_name;\r\n        }\r\n    }\r\n    return name;\r\n}\r\n\r\n\r\nexport default cleanIngredient;\r\n","import cleanIngredient from \"./ingrediant_cleaning\";\r\n\r\nexport default class Sababa {\r\n\r\n    constructor(meat, carb, piquant, startWaitCB, stopWaitCB) {\r\n        this.meat = meat;\r\n        this.carb = carb;\r\n        this.piquant = piquant;\r\n        this.startWaitCB = startWaitCB;\r\n        this.stopWaitCB = stopWaitCB;\r\n\r\n        this.data = require('../data/recipes/yummly_' + meat + '_' + carb + '_' + piquant)['recipes'];\r\n\r\n        this.orderedRecipes = this.orderRecipes();\r\n\r\n        this.vectorDict = {};\r\n        this.count = 0;\r\n\r\n        this.loved_recipes = [];\r\n        this.hated_recipes = {};\r\n        this.ingredient_occurence = {};\r\n        this.key = this.meat + '_' + this.carb + '_' + this.piquant;\r\n\r\n        this.load();\r\n    }\r\n\r\n    load() {\r\n        let data = localStorage.getItem(this.key);\r\n        if (data == null) {\r\n            return;\r\n        }\r\n\r\n        data = JSON.parse(data);\r\n        this.vectorDict = data.vectorDict;\r\n        this.count = data.count;\r\n        this.loved_recipes = [...this.data].filter((x) => data.loved_recipes.includes(x['id']));\r\n        this.hated_recipes = data['hated_recipes'];\r\n        this.ingredient_occurence = data.ingredient_occurence;\r\n    }\r\n\r\n    save() {\r\n        let data = {\r\n            count: this.count,\r\n            vectorDict: this.vectorDict,\r\n            loved_recipes: this.loved_recipes.map((x) => x['id']),\r\n            hated_recipes: this.hated_recipes,\r\n            ingredient_occurence: this.ingredient_occurence\r\n        };\r\n        localStorage.setItem(this.key, JSON.stringify(data));\r\n    }\r\n\r\n    orderRecipes() {\r\n        return [...this.data].sort((x, y) => y['yums'] - x['yums']);\r\n    }\r\n\r\n    determineWeight(ing) {\r\n        this.startWaitCB();\r\n        let min = 1000000;\r\n        let max = 0;\r\n\r\n        for (let x of Object.keys(this.ingredient_occurence)) {\r\n            if (this.ingredient_occurence[x] > max) {\r\n                max = this.ingredient_occurence[x];\r\n            }\r\n            if (this.ingredient_occurence[x] < min) {\r\n                min = this.ingredient_occurence[x];\r\n            }\r\n        }\r\n        this.stopWaitCB();\r\n        return (max - this.ingredient_occurence[ing] + 1) / (max - min);\r\n    }\r\n\r\n    buildVector() {\r\n        this.startWaitCB();\r\n        for (let x of Object.keys(this.orderedRecipes)) {\r\n            let recipe = this.orderedRecipes[x];\r\n            for (let y of Object.keys(recipe['ingredients'])) {\r\n                let ingredient = recipe['ingredients'][y];\r\n                let cat = ingredient['category'];\r\n                let ing = ingredient['name'];\r\n                let filt = cleanIngredient(ing, cat);\r\n                if (filt != null && filt !== '') {\r\n                    if (!(filt in this.ingredient_occurence)) {\r\n                        this.ingredient_occurence[filt] = 1;\r\n                    } else {\r\n                        this.ingredient_occurence[filt] += 1;\r\n                    }\r\n                    this.vectorDict[filt] = 0;\r\n                }\r\n            }\r\n        }\r\n        this.save();\r\n        this.stopWaitCB();\r\n    }\r\n\r\n    incrementWeightTop() {\r\n        this.startWaitCB();\r\n        for (let v = 0; v < Math.ceil(this.orderedRecipes.length / 4); ++v) {\r\n            let rec = this.orderedRecipes[v];\r\n            for (let x of Object.keys(rec['ingredients'])) {\r\n                let ing = rec['ingredients'][x];\r\n                let name = ing['name'];\r\n                let cat = ing['category'];\r\n                let filt = cleanIngredient(name, cat);\r\n                if (filt != null && filt !== '') {\r\n                    this.vectorDict[filt] += this.determineWeight(filt) / 2\r\n                }\r\n            }\r\n        }\r\n        this.save();\r\n        this.stopWaitCB();\r\n    }\r\n\r\n    incrementWeightUser(rec, rating) {\r\n        if (this.data.length <= 0) {\r\n            return;\r\n        }\r\n        this.startWaitCB();\r\n        if (rating === 1) {\r\n            this.loved_recipes.push(rec);\r\n        }\r\n        this.count += 1;\r\n        for (let k of Object.keys(rec['ingredients'])) {\r\n            let ing = rec['ingredients'][k];\r\n            let name = ing['name'];\r\n            let cat = ing['category'];\r\n            let filt = cleanIngredient(name, cat);\r\n            this.vectorDict[filt] += rating * this.determineWeight(filt);\r\n        }\r\n\r\n        let ingList = [];\r\n        let toDelete = [];\r\n        if (this.count % 10 === 0) {\r\n            for (let k of Object.keys(this.vectorDict)) {\r\n                ingList.push(k);\r\n\r\n            }\r\n            ingList.sort((a, b) => this.vectorDict[b] - this.vectorDict[a]);\r\n            let bestIng = [...ingList].splice(Math.floor(0.85 * ingList.length));\r\n            let worstIng = [...ingList].splice(0, Math.ceil(0.10 * ingList.length));\r\n            for (let recipeIter of this.data) {\r\n                let score = this.positiveScore(recipeIter, bestIng, worstIng);\r\n                if (score >= 0) {\r\n                    if (this.hated_recipes[recipeIter['name']] >= 0) {\r\n                        this.hated_recipes[recipeIter['name']] -= 1;\r\n                    }\r\n                } else {\r\n                    if (this.hated_recipes[recipeIter['name']] > 5) {\r\n                        toDelete.push(recipeIter['name']);\r\n                    } else if (this.hated_recipes[recipeIter['name']] >= 0) {\r\n                        this.hated_recipes[recipeIter['name']] += 1;\r\n                    } else if (this.hated_recipes[recipeIter['name']] === undefined) {\r\n                        this.hated_recipes[recipeIter['name']] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(rating === -1)\r\n        {\r\n\r\n        toDelete.push(rec['name']);\r\n        }\r\n\r\n        let new_data = [];\r\n        for (let k of this.data) {\r\n            if (!toDelete.includes(k['name']))\r\n                new_data.push(k);\r\n        }\r\n        this.data = new_data;\r\n        this.save();\r\n        this.stopWaitCB();\r\n    }\r\n\r\n    positiveScore(rec, best, worst) {\r\n        let score = 0;\r\n        for (let k of Object.keys(rec['ingredients'])) {\r\n            let ing = rec['ingredients'][k];\r\n            let filt = cleanIngredient(ing['name'], ing['category']);\r\n            if (best.indexOf(filt) >= 0) {\r\n                score += 1;\r\n            } else if (worst.indexOf(filt) >= 0) {\r\n                score -= 1;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n}","import * as React from \"react\";\r\nimport {css} from \"@emotion/core\";\r\nimport {DotLoader} from \"react-spinners\";\r\nimport yummly_image from '../yummly_logo.png';\r\nimport Sababa from \"../logic/algorithm\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\n\r\nexport class UserInputStage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let data = require('../data/recipes/yummly_' + props.protein + '_' + props.carb + '_' + props.piquant);\r\n        let recipe = data.recipes[Math.floor(Math.random() * data.recipes.length)];\r\n        this.sababa = new Sababa(this.props.protein, this.props.carb, this.props.piquant,\r\n            () => this.startWaiting(), () => this.stopWaiting());\r\n        this.state = {\r\n            isWaiting: false,\r\n            recipe: recipe,\r\n            data: data\r\n        };\r\n        this.stop = false;\r\n        this.currentRecipe = recipe;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startWaiting();\r\n        this.sababa.buildVector();\r\n        this.sababa.incrementWeightTop();\r\n    }\r\n\r\n    drawWaiting() {\r\n        return (\r\n            <div className=\"sweet-loading\">\r\n                <DotLoader\r\n                    css={override}\r\n                    size={50}\r\n                    color={'#60ff43'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    stopWaiting() {\r\n        this.setState({isWaiting: false})\r\n    }\r\n\r\n    startWaiting() {\r\n        this.setState({isWaiting: true})\r\n    }\r\n\r\n    test() {\r\n        this.startWaiting();\r\n        let recipe = this.state.data.recipes[Math.floor(Math.random() * this.state.data.recipes.length)];\r\n        this.setState({recipe: recipe})\r\n\r\n        setTimeout(() => this.stopWaiting(), 1000);\r\n    }\r\n\r\n    compileIngredients(ingredients) {\r\n        let res = [];\r\n        for (let k in Object.keys(ingredients)) {\r\n            let ingredient = ingredients[k];\r\n            let txt = '';\r\n            if (ingredient['quantity'] !== null) {\r\n                txt += ingredient['quantity'];\r\n            }\r\n            if (ingredient['unit'] != null) {\r\n                txt += ' ' + ingredient['unit'] + ' ';\r\n            }\r\n            txt += ingredient['name'];\r\n            res.push(<p>{txt}</p>);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    vote(score) {\r\n        if (this.sababa.data.length <= 1) {\r\n            return;\r\n        }\r\n        this.sababa.incrementWeightUser(this.currentRecipe, score);\r\n        this.currentRecipe = this.sababa.data[Math.floor(Math.random() * this.sababa.data.length)];\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isWaiting) {\r\n            return this.drawWaiting();\r\n        } else {\r\n            let url = this.currentRecipe['page_url'];\r\n            let img = this.currentRecipe.image_url.length === 0 ? yummly_image : this.currentRecipe.image_url;\r\n            let ingredients = this.compileIngredients(this.currentRecipe.ingredients);\r\n            return (\r\n                <div className=\"recipes\">\r\n                    <a href={url} target='_blank' rel=\"noopener noreferrer\">\r\n                        <img src={img}\r\n                             alt={this.currentRecipe.name}/>\r\n                    </a>\r\n                    <p>{this.currentRecipe['name']}</p>\r\n                    <div className=\"ings\">\r\n                        <ul>\r\n                            <h3>Ingredients</h3>\r\n                            <div className='ingredients'>\r\n                                {ingredients}\r\n                            </div>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"fnt\">\r\n                        <i className=\"fa fa-thumbs-down\"\r\n                           onClick={() => this.vote(-1)}/>\r\n                        <i className=\"fa fa-thumbs-up\"\r\n                           onClick={() => this.vote(1)}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {CarbStage, MeatStage, PiquantStage} from \"./Stages.js\";\r\nimport {UserInputStage} from \"./UserInputStage\";\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            stage: 0,\r\n            meat: null,\r\n            carb: null,\r\n            piquant: null,\r\n        };\r\n    }\r\n\r\n    chooseMeat(meat) {\r\n        this.setState({\r\n            meat: meat,\r\n            stage: 1,\r\n        });\r\n    }\r\n\r\n    chooseCarb(carb) {\r\n        this.setState({\r\n            carb: carb,\r\n            stage: 2,\r\n        });\r\n    }\r\n\r\n    choosePiquant(piquant) {\r\n        this.setState({\r\n            piquant: piquant,\r\n            stage: 3\r\n        })\r\n    }\r\n\r\n\r\n    removeSettings(key) {\r\n        if (key === 'all') {\r\n            localStorage.clear();\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n        this.setState({\r\n            stage: 0,\r\n            meat: null,\r\n            carb: null,\r\n            piquant: null\r\n        });\r\n        alert('Your preferences were reset.');\r\n    }\r\n\r\n\r\n    render() {\r\n        let stageDiv;\r\n        switch (this.state.stage) {\r\n            default:\r\n                stageDiv = null;\r\n                break;\r\n            case 0:\r\n                stageDiv = <MeatStage choose={(x) => this.chooseMeat(x)}/>;\r\n                break;\r\n            case 1:\r\n                stageDiv = <CarbStage choose={(x) => this.chooseCarb(x)}/>;\r\n                break;\r\n            case 2:\r\n                stageDiv = <PiquantStage choose={(x) => this.choosePiquant(x)}/>;\r\n                break;\r\n            case 3:\r\n                stageDiv =\r\n                    <UserInputStage protein={this.state.meat} carb={this.state.carb} piquant={this.state.piquant}/>;\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className='main-page'>\r\n                {stageDiv}\r\n\r\n                <div className=\"btnDiv\">\r\n                    <button className=\"prb\" onClick={() => {\r\n                        this.setState({\r\n                            stage: 0,\r\n                            meat: null,\r\n                            carb: null,\r\n                            piquant: null\r\n                        });\r\n                    }\r\n                    }\r\n                    >\r\n                        Change settings\r\n                    </button>\r\n                    <button className=\"prb\" onClick={() => {\r\n                        if (window.confirm('Are you sure you wish to remove all preferences?')) {\r\n                            this.removeSettings('all');\r\n                        }\r\n                    }}\r\n                    >\r\n                        Remove all preferences\r\n                    </button>\r\n                    {this.state.piquant && <button className=\"prb\"\r\n                                                   onClick={() => this.removeSettings(\r\n                                                       this.state.meat + '_' + this.state.carb + '_' + this.state.piquant\r\n                                                   )}\r\n                    >\r\n                        Remove current setting preferences\r\n                    </button>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\nimport './App.css';\nimport MainPage from \"./components/MainPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <MainPage/>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}